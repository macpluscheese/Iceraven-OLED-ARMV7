name: Build IceRaven Dark Theme (Auto-Release)

on:
  schedule:
    - cron: '00 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- NEW STEP: Get latest release info from THIS repository ---
      - name: Get latest release info from this repo
        id: this_repo_latest_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          latest: true
          # Optional: You might want to specify a repository if it's not the current one,
          # but for checking your own repo, 'owner/repo' isn't usually needed.
          # If this action ever fails to find a release, its outputs will be empty.
      # ----------------------------------------------------------------

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y wget apktool zipalign apksigner jq openjdk-17-jdk
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Get Latest IceRaven ARMv7 Release (Upstream)
        id: get_upstream_release
        run: |
          LATEST_RELEASE=$(jq -r '.assets[] | select(.name | contains("armeabi") and contains("forkRelease.apk")) | .browser_download_url' < <(curl -s https://api.github.com/repos/fork-maintainers/iceraven-browser/releases/latest))
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          ICERAVEN_VERSION=$(echo "$LATEST_RELEASE" | sed -E 's/.*iceraven-(.*)-browser.*/\1/')
          echo "ICERAVEN_VERSION=$ICERAVEN_VERSION" >> $GITHUB_OUTPUT
          echo "Current upstream IceRaven version: $ICERAVEN_VERSION"

      - name: Check if new version is available
        id: version_check
        run: |
          UPSTREAM_VERSION="${{ steps.get_upstream_release.outputs.ICERAVEN_VERSION }}"
          THIS_REPO_VERSION="${{ steps.this_repo_latest_release.outputs.tag_name }}"

          echo "Upstream IceRaven version: $UPSTREAM_VERSION"
          echo "This repository's latest release version: ${THIS_REPO_VERSION:-"No previous release found."}"

          if [ "$UPSTREAM_VERSION" != "$THIS_REPO_VERSION" ]; then
            echo "::set-output name=NEW_VERSION_AVAILABLE::true"
            echo "New version available! Building and releasing."
          else
            echo "::set-output name=NEW_VERSION_AVAILABLE::false"
            echo "No new version from upstream. Skipping build and release."
          fi
      
      # --- Conditional steps based on version_check ---
      - name: Download Latest APK
        if: steps.version_check.outputs.NEW_VERSION_AVAILABLE == 'true'
        run: |
          wget -q "${{ steps.get_upstream_release.outputs.LATEST_RELEASE }}" -O iceraven.apk
      - name: Run Build Script
        if: steps.version_check.outputs.NEW_VERSION_AVAILABLE == 'true'
        run: bash build.sh
      - name: Sign APK
        if: steps.version_check.outputs.NEW_VERSION_AVAILABLE == 'true'
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -di > keystore.jks
          apksigner sign --ks keystore.jks --ks-pass pass:${{ secrets.KEYSTORE_PASSPHRASE }} --key-pass pass:${{ secrets.KEY_PASSWORD }} iceraven-patched-signed.apk
      - name: Upload APK as Artifact
        if: steps.version_check.outputs.NEW_VERSION_AVAILABLE == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: iceraven-dark-apk
          path: iceraven-patched-signed.apk
      # -------------------------------------------------

      - name: Create Release
        id: create_release
        # The condition now directly uses the output from the version_check step
        if: steps.version_check.outputs.NEW_VERSION_AVAILABLE == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.get_upstream_release.outputs.ICERAVEN_VERSION }}
          name: IceRaven Dark Theme ${{ steps.get_upstream_release.outputs.ICERAVEN_VERSION }}
          body: |
            Automatic release of IceRaven Dark Theme based on upstream version ${{ steps.get_upstream_release.outputs.ICERAVEN_VERSION }}.
            
            This APK is automatically built and patched for a dark theme.
          files: iceraven-patched-signed.apk

      # Removed the second "Get latest release info" step, as it's now handled upfront.
